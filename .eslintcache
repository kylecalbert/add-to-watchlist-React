[{"/Users/macbook/Documents/React-Projects/movies-app/src/index.js":"1","/Users/macbook/Documents/React-Projects/movies-app/src/reportWebVitals.js":"2","/Users/macbook/Documents/React-Projects/movies-app/src/App.js":"3","/Users/macbook/Documents/React-Projects/movies-app/src/components/Movie.js":"4"},{"size":500,"mtime":1610372213354,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1610372213355,"results":"7","hashOfConfig":"6"},{"size":1926,"mtime":1611409117060,"results":"8","hashOfConfig":"6"},{"size":842,"mtime":1611408996850,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"vbr5ex",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbook/Documents/React-Projects/movies-app/src/index.js",[],["19","20"],"/Users/macbook/Documents/React-Projects/movies-app/src/reportWebVitals.js",[],"/Users/macbook/Documents/React-Projects/movies-app/src/App.js",["21","22"],"/Users/macbook/Documents/React-Projects/movies-app/src/components/Movie.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":2,"column":35,"nodeType":"29","messageId":"30","endLine":2,"endColumn":45},{"ruleId":"31","severity":1,"message":"32","line":19,"column":14,"nodeType":"33","endLine":23,"endColumn":4},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]